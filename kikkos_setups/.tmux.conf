set -g status-interval 1
set -g status-left-length 50
set -g status-right-length 150


set -g @BG_COLOUR colour13
set -g @FG_COLOUR colour0
set -g @ACTIVE_COLOUR colour255
set -g @BRANCH_COLOUR colour219
set -g @STAGED_COLOUR colour226  
set -g @UNSTAGED_COLOUR colour196
set -g @SEPARATOR_COLOUR colour232

set -g status-bg colour13 # have to keep it here manually for some reason

set -g status-left "#{?client_prefix,#[fg=#{@ACTIVE_COLOUR}],#[fg=#{@FG_COLOUR}]} [#{session_name}] "

# Status bar configuration
set -g status-right '#(cd "#{pane_current_path}" 2>/dev/null && if git rev-parse --git-dir >/dev/null 2>&1; then repo=$(basename $(git rev-parse --show-toplevel)); branch=$(git branch --show-current 2>/dev/null || echo "detached"); staged=$(git diff --cached --numstat 2>/dev/null | wc -l | tr -d " "); unstaged=$(git diff --numstat 2>/dev/null | wc -l | tr -d " "); echo "#[fg=#{@ACTIVE_COLOUR}]⎇ $repo#[fg=#{@BRANCH_COLOUR}]:$branch #[fg=#{@STAGED_COLOUR}]●$staged #[fg=#{@UNSTAGED_COLOUR}]●$unstaged#[default]"; else echo "#[fg=#{@SEPARATOR_COLOUR}] No Git repo#[default]"; fi) #[fg=#{@SEPARATOR_COLOUR}]| #[fg=#{@STAGED_COLOUR}]CPU: #(top -bn1 | grep "Cpu(s)" | awk "{print \$2+\$4\"%\"}") #[fg=#{@SEPARATOR_COLOUR}]| #[fg=#{@BRANCH_COLOUR}]#(date "+%Y-%m-%d") #[fg=#{@ACTIVE_COLOUR}]#(date "+%H:%M:%S")'



set -g window-status-style "bg=#{@BG_COLOUR},fg=#{@FG_COLOUR}"
set -g window-status-current-style "bg=#{@BG_COLOUR},fg=#{@ACTIVE_COLOUR}"

set -g window-status-format "#I:#W"
set -g window-status-current-format "(#I:#W#{?window_flags,#{window_flags},})"




# Changing prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

set -g default-terminal "screen-256color"
set -sg terminal-overrides ",*:RGB"

setw -g mode-keys vi

# Can switch within tmux with mouse
set -g mouse on

# Automatically copy whatever is highlighted 
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"
#bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"

bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in > ~/Documents/tmux-copy.txt 2>&1"
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in > ~/Documents/tmux-copy.txt 2>&1"
# Resource with prefix+C-r or prefix+r
bind C-r {source-file ~/.tmux.conf; display "Resourced!"}
bind r   {source-file ~/.tmux.conf; display "Resourced!"}

# Split more naturally.
bind v split-window -h
bind n split-window -v


# vim movement between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# move a window one step either way
bind C-Left swap-window -t -1\; select-window -t -1
bind C-Right swap-window -t +1\; select-window -t +1

# previous window
bind C-l last-window

# Longer history
set-option -g history-limit 50000

# Messages stay longer
set-option -g display-time 2000
set-option -g display-panes-time 2000

# Renumbering windows when closing them, e.g. if I have windwos A-D. If I close window C, which has number 3,
# then window 4 should be number 3, not stay as number 4. This command fixes that
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1


# When creating new window, start in pwd, not in ~
bind c new-window -c "#{pane_current_path}"

#set-option -g default-shell /bin/zsh
set-option -g default-shell /bin/bash


# supposed to help with Vim
set-option -s escape-time 0


# dim out non-active pane
set-window-option -g window-style fg=white,bg=colour236
set-window-option -g window-active-style fg=white,bg=colour235



